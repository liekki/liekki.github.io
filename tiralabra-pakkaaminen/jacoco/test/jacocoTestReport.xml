<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="pakkaaminen"><sessioninfo id="Y-C02VQ11DHV2Q-fbdd92a0" start="1639256005055" dump="1639256007222"/><package name="pakkaaminen"><class name="pakkaaminen/Main" sourcefilename="Main.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="pakkaaminen/LZW" sourcefilename="LZW.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="(Ljava/lang/String;)Ljava/util/ArrayList;" line="24"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Ljava/util/ArrayList;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/lang/String;)V" line="107"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/lang/String;)Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="integerToTwoBytes" desc="(I)[B" line="145"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="twoBytesToInteger" desc="([B)I" line="157"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="112" covered="189"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="21" covered="36"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="pakkaaminen/HuffmanTree" sourcefilename="HuffmanTree.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(CI)V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(C)V" line="52"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILpakkaaminen/HuffmanTree;Lpakkaaminen/HuffmanTree;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeight" desc="()I" line="79"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()C" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lpakkaaminen/HuffmanTree;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lpakkaaminen/HuffmanTree;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLeft" desc="(Lpakkaaminen/HuffmanTree;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRight" desc="(Lpakkaaminen/HuffmanTree;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeNode" desc="(Lpakkaaminen/HuffmanTree;Ljava/io/ObjectOutputStream;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserializeNode" desc="(Ljava/io/ObjectInputStream;)Lpakkaaminen/HuffmanTree;" line="155"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="pakkaaminen/Huffman" sourcefilename="Huffman.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeString" desc="(Ljava/lang/String;)V" line="37"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;)V" line="77"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/lang/String;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="(Ljava/util/HashMap;Ljava/lang/String;)[B" line="132"><counter type="INSTRUCTION" missed="5" covered="95"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="(Lpakkaaminen/HuffmanTree;[B)Ljava/lang/String;" line="172"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateHuffmanTree" desc="(Lpakkaaminen/MinHeap;)Lpakkaaminen/HuffmanTree;" line="212"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateFrequencyTable" desc="(Ljava/lang/String;)Ljava/util/HashMap;" line="239"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateHuffmanHeap" desc="(Ljava/util/HashMap;I)Lpakkaaminen/MinHeap;" line="261"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateCodes" desc="(Lpakkaaminen/HuffmanTree;Ljava/util/HashMap;Ljava/lang/String;)V" line="282"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="serializeTree" desc="(Lpakkaaminen/HuffmanTree;)[B" line="303"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deserialize" desc="([B)Lpakkaaminen/HuffmanTree;" line="321"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="177" covered="408"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="37" covered="76"/><counter type="COMPLEXITY" missed="10" covered="25"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="pakkaaminen/File" sourcefilename="File.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(Ljava/lang/String;[B)V" line="26"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="read" desc="(Ljava/lang/String;)[B" line="40"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="pakkaaminen/MinHeap" sourcefilename="MinHeap.java"><method name="&lt;init&gt;" desc="(I)V" line="12"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parent" desc="(I)I" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="(I)I" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="(I)I" line="48"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="59"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Lpakkaaminen/HuffmanTree;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="heapify" desc="(I)V" line="94"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()Lpakkaaminen/HuffmanTree;" line="116"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSize" desc="()I" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MinHeap.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="14" mb="0" cb="6"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="26" mb="1" cb="3"/><line nr="100" mi="0" ci="15" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="14" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="File.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="14" ci="0" mb="0" cb="0"/><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="HuffmanTree.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Huffman.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="2" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="2" cb="0"/><line nr="79" mi="13" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="11" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="143" mi="0" ci="13" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="1" ci="12" mb="1" cb="1"/><line nr="153" mi="2" ci="11" mb="1" cb="1"/><line nr="154" mi="2" ci="9" mb="1" cb="1"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="28" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="2"/><line nr="181" mi="0" ci="6" mb="0" cb="2"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="1" cb="3"/><line nr="194" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="2"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="8" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="2"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="2"/><line nr="242" mi="0" ci="7" mb="0" cb="2"/><line nr="243" mi="0" ci="8" mb="0" cb="0"/><line nr="244" mi="0" ci="12" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="9" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="11" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="4"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="2"/><line nr="288" mi="0" ci="12" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="1" cb="1"/><line nr="291" mi="0" ci="12" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="177" covered="408"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="37" covered="76"/><counter type="COMPLEXITY" missed="10" covered="25"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Main.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LZW.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="16" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="12" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="10" ci="0" mb="2" cb="0"/><line nr="129" mi="15" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="11" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="9" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="189"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="21" covered="36"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="343" covered="943"/><counter type="BRANCH" missed="17" covered="71"/><counter type="LINE" missed="71" covered="199"/><counter type="COMPLEXITY" missed="22" covered="67"/><counter type="METHOD" missed="10" covered="35"/><counter type="CLASS" missed="1" covered="5"/></package><counter type="INSTRUCTION" missed="343" covered="943"/><counter type="BRANCH" missed="17" covered="71"/><counter type="LINE" missed="71" covered="199"/><counter type="COMPLEXITY" missed="22" covered="67"/><counter type="METHOD" missed="10" covered="35"/><counter type="CLASS" missed="1" covered="5"/></report>